#+TITLE: SpeechState

* SDK

** Spawn SpeechState
#+begin_src typescript
  import { speechstate } from "speechstate";

  // start with this action in your state chart
  assign({
      spstRef: ({ spawn }) => {
          return spawn(speechstate, {
              input: {
                  settings: ...
              },
          });
      },
  }),
#+end_src

#+begin_src typescript
interface AzureCredentials {
  endpoint: string;
  key: string;
}

interface Settings {
  locale: string;
  azureCredentials: string | AzureCredentials; // you can use proxy URL or full credentials
  asrDefaultCompleteTimeout: number;
}
#+end_src


** Events
*** DM to SpeechState
- PREPARE :: (no value)
- SPEAK :: ~value: Agenda~
- LISTEN :: (no value)
- PAUSE :: (no value)
- STOP :: (no value)

#+begin_src typescript
interface Agenda {
  utterance: string;
  voice?: string;
  streamURL?: string;
}
#+end_src



* How to run ~SpeechState~
** Create Azure account and enable speech services
1. Apply for free student credits
   https://azure.microsoft.com/en-us/free/students/. You should be
   able to login with your GU account.
2. Make sure that you are logged into the Azure portal (https://portal.azure.com/).
3. Create a *Resource group* (you can use search field):
   - Subscription: *Azure for students*
   - Resource group: any name
   - Region: *(Europe) North Europe*
4. Create a *Speech service*:
   - Name: any name
   - Subscription: *Azure for students*
   - Location: *(Europe) North Europe*
   - Pricing tier: *Free (F0)*
   - Resource group: group name from the previous step
5. Within your Speech Service go to: *Resourse management â†’ Keys and
   Endpoint* and copy your KEY 1.
